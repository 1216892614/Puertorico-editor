name: "publish"

on: [push]

jobs:
    publish-tauri:
        permissions:
            contents: write
        strategy:
            fail-fast: false
            matrix:
                settings:
                    - platform: "macos-latest" # for Arm based macs (M1 and above).
                      args: "--target aarch64-apple-darwin"
                    - platform: "macos-latest" # for Intel based macs.
                      args: "--target x86_64-apple-darwin"
                    - platform: "ubuntu-22.04" # for Tauri v1 you could replace this with ubuntu-20.04.
                      args: ""
                    - platform: "windows-latest"
                      args: ""

        runs-on: ${{ matrix.settings.platform }}
        steps:
            - uses: actions/checkout@v4

            - name: install dependencies (ubuntu only)
              if: matrix.settings.platform == 'ubuntu-22.04' # This must match the platform value defined above.
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

            - name: setup bun
              uses: oven-sh/setup-bun@v1
              with:
                  bun-version: latest

            - name: install Rust stable
              uses: dtolnay/rust-toolchain@stable
              with:
                  targets: ${{ matrix.settings.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

            - name: Rust cache
              uses: swatinem/rust-cache@v2
              with:
                  workspaces: "./src-tauri -> target"

            - name: install frontend dependencies
              run: bun install

            - name: build frontend
              run: bun run build

            - uses: tauri-apps/tauri-action@v0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
                  releaseName: "App v__VERSION__"
                  releaseBody: "See the assets to download this version and install."
                  releaseDraft: true
                  prerelease: false
                  args: ${{ matrix.settings.args }}
